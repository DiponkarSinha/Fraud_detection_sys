name: Fraud Detection Pipeline

on:
  push:
    paths:
      - 'data/**/*.csv'
  pull_request:
    paths:
      - 'data/**/*.csv'
  workflow_dispatch:

jobs:
  fraud-detection:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run fraud detection
      run: |
        python src/fraud_detector.py
        
    - name: Upload fraud reports
      uses: actions/upload-artifact@v3
      with:
        name: fraud-detection-reports
        path: |
          outputs/fraud_report.json
          outputs/fraud_report_detailed.csv
          
    - name: Notify on fraud detection
      if: success()
      run: |
        echo "Fraud detection completed successfully!"
        if [ -f "outputs/fraud_report.json" ]; then
          FRAUD_COUNT=$(python -c "import json; data=json.load(open('outputs/fraud_report.json')); print(data['fraud_detected'])")
          if [ "$FRAUD_COUNT" -gt "0" ]; then
            echo "ðŸš¨ ALERT: $FRAUD_COUNT fraudulent transactions detected!"
            echo "fraud_detected=$FRAUD_COUNT" >> $GITHUB_OUTPUT
          fi
        fi
        
    - name: Trigger Kaggle integration
      if: success()
      run: |
        echo "Triggering Kaggle dataset update..."
        # This would typically call Kaggle API or webhook
        curl -X POST "https://api.github.com/repos/${{ github.repository }}/dispatches" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{"event_type": "kaggle-update", "client_payload": {"fraud_detected": true}}'
        
    - name: Trigger AWS integration
      if: success()
      run: |
        echo "Triggering AWS Lambda function..."
        # This would typically call AWS Lambda or SNS
        echo "AWS integration triggered for fraud analysis"
        
    - name: Send email notification
      if: success()
      run: |
        echo "Sending email notification..."
        # This would typically use AWS SES, SendGrid, or similar service
        echo "Email notification sent to fraud detection team"